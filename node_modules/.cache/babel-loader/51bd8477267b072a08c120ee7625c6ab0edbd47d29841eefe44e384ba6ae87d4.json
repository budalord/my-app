{"ast":null,"code":"var _jsxFileName = \"D:\\\\python\\\\youtub\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css'; // 引入自定义的CSS文件\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [url, setUrl] = useState('');\n  const [downloadLink, setDownloadLink] = useState('');\n  const [taskId, setTaskId] = useState('');\n  const [progress, setProgress] = useState(0);\n  const isValidUrl = string => {\n    try {\n      new URL(string);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setDownloadLink(''); // 清除之前的下载链接\n    setProgress(0); // 重置进度\n\n    if (!url) {\n      toast.error(\"URL cannot be empty!\", {\n        className: 'toast-custom-style'\n      });\n      return;\n    }\n    if (!isValidUrl(url)) {\n      toast.error(\"Invalid URL format!\", {\n        className: 'toast-custom-style'\n      });\n      return;\n    }\n    const response = await fetch('http://0.0.0.0:8000/api/download', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        url\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      setTaskId(data.task_id);\n      toast.success(\"Analysis started!\", {\n        className: 'toast-custom-style'\n      });\n    } else {\n      const errorData = await response.json();\n      toast.error(`Analysis failed: ${errorData.detail}`, {\n        className: 'toast-custom-style'\n      });\n    }\n  };\n  const handleReset = () => {\n    setUrl('');\n    setDownloadLink('');\n    setProgress(0);\n    setTaskId('');\n    toast.info(\"Input reset successfully!\");\n  };\n  const handleDownloadComplete = async () => {\n    // 通知后端清理文件\n    await fetch(`http://0.0.0.0:8000/api/cleanup/${taskId}`, {\n      method: 'POST'\n    });\n    toast.info(\"Files cleaned up successfully!\");\n  };\n  useEffect(() => {\n    if (taskId) {\n      const interval = setInterval(async () => {\n        const response = await fetch(`http://0.0.0.0:8000/api/progress/${taskId}`);\n        if (response.ok) {\n          const data = await response.json();\n          console.log(`Progress: ${data.progress}%`); // 添加日志\n          setProgress(data.progress);\n          if (data.progress === 100) {\n            clearInterval(interval);\n            const checkFileExists = async () => {\n              const fileResponse = await fetch(`http://0.0.0.0:8000/api/file/${taskId}`);\n              if (fileResponse.ok) {\n                const blob = await fileResponse.blob();\n                const downloadUrl = window.URL.createObjectURL(blob);\n                setDownloadLink(downloadUrl);\n                toast.success(\"Analysis complete!\", {\n                  className: 'toast-custom-style'\n                });\n              } else {\n                setTimeout(checkFileExists, 1000); // 如果文件还没有准备好，1秒后再次检查\n              }\n            };\n            checkFileExists();\n          }\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [taskId, url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Video Downloader\\uFF08\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"subtitle\",\n          children: \"Cool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 30\n        }, this), \"Cat \\u4E13\\u5C5E\\uFF09\", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 75\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"download-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: url,\n          onChange: e => setUrl(e.target.value),\n          placeholder: \"Enter video URL\",\n          className: \"url-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"reset-button\",\n          onClick: handleReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"download-button\",\n          children: \"Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), progress > 0 && progress < 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), downloadLink && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: downloadLink,\n        download: \"video.mp4\",\n        className: \"download-link\",\n        onClick: handleDownloadComplete,\n        children: \"Download Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oeTD4l3gx/inwms1ghBa9/DmFN8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","jsxDEV","_jsxDEV","App","_s","url","setUrl","downloadLink","setDownloadLink","taskId","setTaskId","progress","setProgress","isValidUrl","string","URL","_","handleSubmit","e","preventDefault","error","className","response","fetch","method","headers","body","JSON","stringify","ok","data","json","task_id","success","errorData","detail","handleReset","info","handleDownloadComplete","interval","setInterval","console","log","clearInterval","checkFileExists","fileResponse","blob","downloadUrl","window","createObjectURL","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","onClick","style","width","href","download","_c","$RefreshReg$"],"sources":["D:/python/youtub/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css'; // 引入自定义的CSS文件\n\nfunction App() {\n  const [url, setUrl] = useState('');\n  const [downloadLink, setDownloadLink] = useState('');\n  const [taskId, setTaskId] = useState('');\n  const [progress, setProgress] = useState(0);\n\n  const isValidUrl = (string) => {\n    try {\n      new URL(string);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setDownloadLink('');  // 清除之前的下载链接\n    setProgress(0);  // 重置进度\n\n    if (!url) {\n      toast.error(\"URL cannot be empty!\", { className: 'toast-custom-style' });\n      return;\n    }\n\n    if (!isValidUrl(url)) {\n      toast.error(\"Invalid URL format!\", { className: 'toast-custom-style' });\n      return;\n    }\n\n    const response = await fetch('http://0.0.0.0:8000/api/download', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ url }),\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      setTaskId(data.task_id);\n      toast.success(\"Analysis started!\", { className: 'toast-custom-style' });\n    } else {\n      const errorData = await response.json();\n      toast.error(`Analysis failed: ${errorData.detail}`, { className: 'toast-custom-style' });\n    }\n  };\n\n  const handleReset = () => {\n    setUrl('');\n    setDownloadLink('');\n    setProgress(0);\n    setTaskId('');\n    toast.info(\"Input reset successfully!\");\n  };\n\n  const handleDownloadComplete = async () => {\n    // 通知后端清理文件\n    await fetch(`http://0.0.0.0:8000/api/cleanup/${taskId}`, {\n      method: 'POST',\n    });\n    toast.info(\"Files cleaned up successfully!\");\n  };\n\n  useEffect(() => {\n    if (taskId) {\n      const interval = setInterval(async () => {\n        const response = await fetch(`http://0.0.0.0:8000/api/progress/${taskId}`);\n        if (response.ok) {\n          const data = await response.json();\n          console.log(`Progress: ${data.progress}%`); // 添加日志\n          setProgress(data.progress);\n          if (data.progress === 100) {\n            clearInterval(interval);\n            const checkFileExists = async () => {\n              const fileResponse = await fetch(`http://0.0.0.0:8000/api/file/${taskId}`);\n              if (fileResponse.ok) {\n                const blob = await fileResponse.blob();\n                const downloadUrl = window.URL.createObjectURL(blob);\n                setDownloadLink(downloadUrl);\n                toast.success(\"Analysis complete!\", { className: 'toast-custom-style' });\n              } else {\n                setTimeout(checkFileExists, 1000); // 如果文件还没有准备好，1秒后再次检查\n              }\n            };\n            checkFileExists();\n          }\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [taskId, url]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Video Downloader（<span className=\"subtitle\">Cool</span>Cat 专属）<span></span></h1>\n        <form onSubmit={handleSubmit} className=\"download-form\">\n          <input\n            type=\"text\"\n            value={url}\n            onChange={(e) => setUrl(e.target.value)}\n            placeholder=\"Enter video URL\"\n            className=\"url-input\"\n          />\n          <button type=\"button\" className=\"reset-button\" onClick={handleReset}>Reset</button>\n          <button type=\"submit\" className=\"download-button\">Analysis</button>\n        </form>\n        {progress > 0 && progress < 100 && (\n          <div className=\"progress-container\">\n            <div className=\"progress-bar\" style={{ width: `${progress}%` }}></div>\n            <span>{progress}%</span>\n          </div>\n        )}\n        {downloadLink && (\n          <a href={downloadLink} download=\"video.mp4\" className=\"download-link\" onClick={handleDownloadComplete}>\n            Download Here\n          </a>\n        )}\n        <ToastContainer />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}